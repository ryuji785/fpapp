plugins {
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'app.fp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    implementation 'org.flywaydb:flyway-core:10.17.2'
    implementation 'org.flywaydb:flyway-database-postgresql:10.17.2'
    implementation 'org.postgresql:postgresql:42.7.3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Load .env manually
def loadEnv() {
    def env = [:]
    def envFile = file("${rootProject.rootDir}/../.env")
    if (envFile.exists()) {
        envFile.eachLine { line ->
            if (!line.trim().isEmpty() && !line.trim().startsWith("#")) {
                def parts = line.split('=')
                if (parts.length == 2) {
                    def key = parts[0].trim()
                    def value = parts[1].trim()
                    env[key] = value
                    System.setProperty(key, value)
                }
            }
        }
    }
    return env
}

def env = loadEnv()

flyway {
    url = 'jdbc:postgresql://localhost:5432/fpapp'
    user = System.getProperty("DB_USER")
    password = System.getProperty("DB_PASS_WORD")
    locations = ['filesystem:src/main/resources/db/migration']
    cleanDisabled = false
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-Amapstruct.defaultComponentModel=spring']
}

tasks.named('test') {
    useJUnitPlatform()
}
